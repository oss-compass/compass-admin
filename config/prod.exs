import Config

# For production, don't forget to configure the url host
# to something meaningful, Phoenix uses this information
# when generating URLs.
#
# Note we also include the path to a cache manifest
# containing the digested version of static files. This
# manifest is generated by the `mix phx.digest` task,
# which you should run after static files are built and
# before starting your production server.
config :compass_admin, CompassAdminWeb.Endpoint,
  cache_static_manifest: "priv/static/cache_manifest.json"

# Do not print debug messages in production
config :logger, level: :info

config :compass_admin, :redis,
  host: "compass-common-2",
  port: 6379

config :compass_admin, CompassAdmin.Cluster,
  url: "http://localhost:9200",
  username: "username",
  password: "password"

config :amqp,
  connections: [
    compass_conn: [url: "amqp://admin:admin@localhost:5672"],
  ],
  channels: [
    compass_chan: [connection: :compass_conn]
  ]

config :compass_admin, CompassAdmin.Services.QueueSchedule,
  worker_num: 16,
  max_group: 4,
  host: "localhost",
  port: 5672,
  username: "username",
  password: "password",
  queues: [
    [major_queue: "analyze_queue_v1", minior_queue: "analyze_queue_v1_temp", pending_queue: "analyze_queue_v1_temp_bak"]
  ]

config :compass_admin, CompassAdmin.Services.CronoCheck,
  process_name: "compass-web-crontab",
  supervisor_api: "http://localhost:19999/RPC2",
  basic_auth: "basic_auth"

config :compass_admin, CompassAdmin.Services.ExportMetrics,
  proxy: "http://127.0.0.1:10808",
  github_tokens: [
  ],
  projects_information_path: "/home/git/compass-web-service/compass-projects-information",
  all_queues: [
    [name: "analyze_queue_v1", desc: "Major working queue"],
    [name: "analyze_queue_v1_temp", desc: "Minor working queue"],
    [name: "analyze_queue_v1_temp_bak", desc: "Pendding queue"],
    [name: "lab_queue_v1", desc: "Lab metric working queue"],
    [name: "summary_queue_v1", desc: "Summary metric working queue"],
    [name: "analyze_queue_v2", desc: "Community metric working queue"],
    [name: "submit_task_v1", desc: "Pull Request sumbit queue"],
    [name: "yaml_check_v1", desc: "Yaml file format check queue"],
    [name: "subscriptions_update_v1", desc: "Subscriptions update queue"],
  ]

# ## SSL Support
#
# To get SSL working, you will need to add the `https` key
# to the previous section and set your `:url` port to 443:
#
#     config :compass_admin, CompassAdminWeb.Endpoint,
#       ...,
#       url: [host: "example.com", port: 443],
#       https: [
#         ...,
#         port: 443,
#         cipher_suite: :strong,
#         keyfile: System.get_env("SOME_APP_SSL_KEY_PATH"),
#         certfile: System.get_env("SOME_APP_SSL_CERT_PATH")
#       ]
#
# The `cipher_suite` is set to `:strong` to support only the
# latest and more secure SSL ciphers. This means old browsers
# and clients may not be supported. You can set it to
# `:compatible` for wider support.
#
# `:keyfile` and `:certfile` expect an absolute path to the key
# and cert in disk or a relative path inside priv, for example
# "priv/ssl/server.key". For all supported SSL configuration
# options, see https://hexdocs.pm/plug/Plug.SSL.html#configure/1
#
# We also recommend setting `force_ssl` in your endpoint, ensuring
# no data is ever sent via http, always redirecting to https:
#
#     config :compass_admin, CompassAdminWeb.Endpoint,
#       force_ssl: [hsts: true]
#
# Check `Plug.SSL` for all available options in `force_ssl`.
